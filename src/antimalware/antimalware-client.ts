


export interface AntimalwareClientType {
    Scan: (dataStream: any, handler: Function) => void
}

export default class AntimalwareClient implements AntimalwareClientType {

    antimalWareProvider: AntimalwareClientType

    constructor(antimalWareProvider: AntimalwareClientType) {
        if (!antimalWareProvider) {
            throw new Error('Error antimalWareProvider cannot be undefined')
        }
        this.antimalWareProvider = antimalWareProvider
    }

    Scan = (dataStream: any, handler: Function) => {
        try {
            this.antimalWareProvider.Scan(dataStream, handler)
        } catch (e) {
            throw e
        }
    }
}